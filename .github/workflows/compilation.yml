name: CI

on:
  push:
    branches: 
      - '*'
    tags:
      - v*
  pull_request:
  repository_dispatch:
    types: [run_build]
  workflow_dispatch: {}

jobs:
  cores:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_owner: [ps2dev]
        core_opts: [
          # [libretro-prboom, prboom_libretro_ps2],
          [libretro-samples, test_libretro_ps2],
          [picodrive, picodrive_libretro_ps2],
          # [gambatte-libretro, gambatte_libretro_ps2],
          # [snes9x2002, snes9x2002_libretro_ps2],
          # [libretro-lutro, lutro_libretro_ps2],
          [gpsp, gpsp_libretro_ps2],
          # [libretro-fceumm, fceumm_libretro_ps2],
          [stella2014-libretro, stella2014_libretro_ps2],
          [libretro-cap32, cap32_libretro_ps2],
          [QuickNES_Core, quicknes_libretro_ps2],
         ]
      fail-fast: false

    container: ${{ matrix.docker_owner }}/ps2dev:latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apk add build-base git bash

    - name: Compile custom ps2_driver branch
      run: |
        git clone https://github.com/fjtrujy/ps2_drivers.git
        cd ps2_drivers
        git checkout mx4sio
        make -j $(getconf _NPROCESSORS_ONLN) clean
        make -j $(getconf _NPROCESSORS_ONLN) install
    
    - name: Compile project
      run: |
        ./prepare_release.sh
        ./prepare_retroarch.sh
        ./cores/${{ matrix.core_opts[0] }}.sh
        ./generate_retroarch.sh ${{ matrix.core_opts[0] }} ${{ matrix.core_opts[1] }}

    - name: Get short SHA
      id: slug
      run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: core-${{ matrix.core_opts[0] }}-${{ matrix.docker_owner }}-${{ steps.slug.outputs.sha8 }}
        path: RA/


  libretro-salamander:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_owner: [ps2dev]
      fail-fast: false

    container: ${{ matrix.docker_owner }}/ps2dev:latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apk add build-base git bash

    - name: Compile custom ps2_driver branch
      run: |
        git clone https://github.com/fjtrujy/ps2_drivers.git
        cd ps2_drivers
        git checkout mx4sio
        make -j $(getconf _NPROCESSORS_ONLN) clean
        make -j $(getconf _NPROCESSORS_ONLN) install
    
    - name: Compile project
      run: |
        ./prepare_release.sh
        ./prepare_retroarch.sh
        ./generate_salamander.sh

    - name: Get short SHA
      id: slug
      run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: salamander-${{ matrix.docker_owner }}-${{ steps.slug.outputs.sha8 }}
        path: RA/


  libretro-info-core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_owner: [ps2dev]

    steps:
    - uses: actions/checkout@v4

    - name: Compile project
      run: |
        ./prepare_release.sh
        ./libretro-core-info.sh

    - name: Get short SHA
      id: slug
      run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: core-info-${{ matrix.docker_owner }}-${{ steps.slug.outputs.sha8 }}
        path: RA/

  combine-artifacts:
    needs: [cores, libretro-salamander, libretro-info-core]
    runs-on: ubuntu-latest
    steps:
      - name: Get short SHA
        id: slug
        run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: "*-${{ steps.slug.outputs.sha8 }}"
          merge-multiple: true

      - name: Create final artifact
        run: |
          mkdir -p final-artifact
          cp -r artifacts/* final-artifact/

      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: RA-combined-${{ steps.slug.outputs.sha8 }}
          path: final-artifact/

      - name: Delete core artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: "core-*-*-${{ steps.slug.outputs.sha8 }}"

      - name: Delete salamander artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: "salamander-*-${{ steps.slug.outputs.sha8 }}"

      - name: Delete core-info artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: "core-info-*-${{ steps.slug.outputs.sha8 }}"

    
